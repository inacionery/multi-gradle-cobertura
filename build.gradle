allprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'

    repositories {
        jcenter()
    }
}

apply plugin: 'sonar'
 
sonar {
 
    if (rootProject.hasProperty('sonarHostUrl')) {
        server.url = rootProject.sonarHostUrl
    }
 
    database {
        if (rootProject.hasProperty('sonarJdbcUrl')) {
            url = rootProject.sonarJdbcUrl
        }
        if (rootProject.hasProperty('sonarJdbcDriver')) {
            driverClassName = rootProject.sonarJdbcDriver
        }
        if (rootProject.hasProperty('sonarJdbcUsername')) {
            username = rootProject.sonarJdbcUsername
        }
        if (rootProject.hasProperty('sonarJdbcPassword')) {
            password = rootProject.sonarJdbcPassword
        }
    }
 
    project {
        dynamicAnalysis  = "reuseReports"
        withProjectProperties { props ->
            props["sonar.core.codeCoveragePlugin"] = "jacoco"
            props["sonar.jacoco.reportPath"]       = "${buildDirName}/jacoco.exec"
        }
    }
 
    println("Sonar parameters used: server.url='${server.url}'; database.url='${database.url}'; database.driverClassName='${database.driverClassName}'; database.username='${database.username}'")
 
}
 
subprojects { subproject ->
 
 
    // See http://www.gradle.org/docs/current/userguide/dependency_management.html#sub:configurations
    // and http://www.gradle.org/docs/current/dsl/org.gradle.api.artifacts.ConfigurationContainer.html
    configurations {
        jacoco //Configuration Group used by Sonar to provide Code Coverage using JaCoCo
    }
 
    // dependencies that are common across all java projects
    dependencies {
       
        jacoco group: "org.jacoco", name: "org.jacoco.agent", version: "0.7.7.201606060606", classifier: "runtime"
        
    }
 
    test {
        jvmArgs "-javaagent:${configurations.jacoco.asPath}=destfile=${buildDir}/jacoco.exec,includes=org.gradle.*"
    }

}